<!--
If you want to upload an image, the html form encoding must be set to multipart/form-data, that is done by set ':multipart => true'
:validate => true is for client_side_validation gem, doing validation dynamically
-->
<%= form_for @user, html: {multipart: true, class: 'form-horizontal'} do |f| %>
  <div class="control-group">
    <%= label_tag :email, t(:email), :class => 'control-label' %>
    <div class="controls"><%= f.text_field :email, :placeholder => t(:email) %></div>
  </div>
  <div class="control-group">
    <%= label_tag :password, t(:password), :class => 'control-label' %>
    <!-- note that we have to explicit set validate confirmation to false, otherwise client_side_validations gem will always try to confirm password -->
    <div class="controls"><%= f.password_field :password, :placeholder => t(:password), :validate => {:confirmation => false} %></div>
  </div>
  <div class="control-group">
    <%= label_tag :name, t(:full_name), :class => 'control-label' %>
    <div class="controls"><%= f.text_field :name, :placeholder => t(:full_name) %></div>
  </div>
  <!--<div class="control-group">-->
    <!--<%# label_tag :mobile, t(:mobile), :class => 'control-label' %>-->
    <!--<div class="controls"><%# f.text_field :mobile, :placeholder => t(:mobile) %></div>-->
  <!--</div>-->
  <div class="control-group">
    <%= label_tag :avatar, t(:avatar), :class => 'control-label' %>
    <div class="controls"><%= f.file_field :avatar %></div>
  </div>
  <div class="form-actions">
    <%= f.submit t('signup'), :class => 'btn btn-success'%>
  </div>
<% end %>